import re
from .spec import ExpectedColumnItem, Type, BaseSpec
from typing import Dict, List


class DNAseqSpec(BaseSpec):
    @property
    def version(self):
        return "20221128"

    @property
    def description(self) -> str:
        return """"If you have any questions, please feel free to contact us at quartet@fudan.edu.cn.\nNOTE: This template table may change in the future as the specification is upgraded. You need to rename the excel file to metadata.xlsx before you uploading to Quartet Data Portal.
        """

    @property
    def specs(self) -> Dict[str, List[ExpectedColumnItem]]:
        return {
            "metadata": [
                ExpectedColumnItem(
                    name="sample_id",
                    required=True,
                    type=Type.CATEGORY,
                    options=[
                        "D5_1",
                        "D6_1",
                        "F7_1",
                        "M8_1",
                        "D5_2",
                        "D6_2",
                        "F7_2",
                        "M8_2",
                        "D5_3",
                        "D6_3",
                        "F7_3",
                        "M8_3",
                    ],
                    procedure="N",
                    description="Sample ID",
                    example="D5_1",
                ),
                ExpectedColumnItem(
                    name="library_id",
                    required=True,
                    type=Type.TEXT,
                    regex=re.compile(r"^(D5|D6|F7|M8)_[1-9]+_202[0-9]{5}$"),
                    procedure="Library Info",
                    description="Library ID",
                    example="D5_1_20220523",
                ),
                ExpectedColumnItem(
                    name="preparation_dna_shearing",
                    required=True,
                    type=Type.TEXT,
                    procedure="Library Info",
                    description="Method for DNA shearing, e.g. Ultra-sonication, enzymatic fragmentation",
                    example="Ultra-sonication",
                ),
                ExpectedColumnItem(
                    name="preparation_kit",
                    required=True,
                    type=Type.TEXT,
                    procedure="Library Info",
                    description="Kit for WGS preparation, e.g. eg: MGIEasy Fast PCR-FREE FS Library Prep Set",
                    example="eg: MGIEasy Fast PCR-FREE FS Library Prep Set",
                ),
                ExpectedColumnItem(
                    name="preparation_method",
                    required=True,
                    type=Type.CATEGORY,
                    options=["Manual", "Automated"],
                    procedure="Library Info",
                    description="Method for library preparation, e.g. Manual, Automated",
                    example="Manual",
                ),
                ExpectedColumnItem(
                    name="preparation_pcr_cycles",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=100,
                    procedure="Library Info",
                    description="Number of PCR cycles",
                    example=10,
                ),
                ExpectedColumnItem(
                    name="preparation_date",
                    required=True,
                    type=Type.NUMBER,
                    min=20150101,
                    max=20361231,
                    procedure="Library Info",
                    description="Date of library preparation",
                    example=20210523,
                ),
                ExpectedColumnItem(
                    name="index_position",
                    required=True,
                    type=Type.CATEGORY,
                    options=["i7", "i5", "i5+i7"],
                    procedure="Library Info",
                    description="Index position, e.g. i7, i5, i5+i7",
                    example="i7",
                ),
                ExpectedColumnItem(
                    name="sequencing_platform",
                    required=True,
                    type=Type.TEXT,
                    procedure="Sequencing Info",
                    description="Sequencing platform, e.g. MGISEQ-2000, MGISEQ-200, MGISEQ-50, BGISEQ-500, BGISEQ-50",
                    example="MGISEQ-2000",
                ),
                ExpectedColumnItem(
                    name="flowcell_id",
                    required=True,
                    type=Type.TEXT,
                    procedure="Sequencing Info",
                    description="Flowcell ID",
                    example="E100014514",
                ),
                ExpectedColumnItem(
                    name="lane_id",
                    required=True,
                    type=Type.TEXT,
                    procedure="Sequencing Info",
                    description="Lane ID",
                    example="lane01",
                ),
                ExpectedColumnItem(
                    name="run_date",
                    required=True,
                    type=Type.NUMBER,
                    min=20150101,
                    max=20361231,
                    procedure="Sequencing Info",
                    description="Date of sequencing run",
                    example=20210523,
                ),
                ExpectedColumnItem(
                    name="file_size",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=100000000000,
                    procedure="Sequencing Info",
                    description="File size of sequencing data",
                    example=100000000000,
                ),
            ],
            "quality_control": [
                ExpectedColumnItem(
                    name="sample_id",
                    required=True,
                    type=Type.CATEGORY,
                    options=[
                        "D5_1",
                        "D6_1",
                        "F7_1",
                        "M8_1",
                        "D5_2",
                        "D6_2",
                        "F7_2",
                        "M8_2",
                        "D5_3",
                        "D6_3",
                        "F7_3",
                        "M8_3",
                    ],
                    procedure="N",
                    description="Sample ID",
                    example="D5_1",
                ),
                ExpectedColumnItem(
                    name="library_id",
                    required=True,
                    type=Type.TEXT,
                    regex=re.compile(r"^(D5|D6|F7|M8)_[1-9]+_202[0-9]{5}$"),
                    procedure="Library Info",
                    description="Library ID",
                    example="D5_1_20220523",
                ),
                ExpectedColumnItem(
                    name="a260_a280",
                    required=True,
                    type=Type.FLOAT,
                    min=0.0,
                    max=10.0,
                    procedure="DNA QC",
                    description="A260/A280",
                    example=1.8,
                ),
                ExpectedColumnItem(
                    name="dna_conc",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=1000,
                    procedure="DNA QC",
                    description="DNA concentration (ng/ul)",
                    example=100,
                ),
                ExpectedColumnItem(
                    name="dna_volume",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=1000,
                    procedure="DNA QC",
                    description="DNA volume (ul)",
                    example=100,
                ),
                ExpectedColumnItem(
                    name="dna_input",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=1000,
                    procedure="DNA QC",
                    description="DNA input (ng)",
                    example=100,
                ),
                ExpectedColumnItem(
                    name="cdna_fragments",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=1000,
                    procedure="Library QC",
                    description="cDNA fragments (bp)",
                    example=340,
                ),
                ExpectedColumnItem(
                    name="cdna_conc",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=1000,
                    procedure="Library QC",
                    description="cDNA concentration (ng/ul)",
                    example=20,
                ),
                ExpectedColumnItem(
                    name="cdna_yield",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=1000,
                    procedure="Library QC",
                    description="cDNA yield (ng)",
                    example=440,
                ),
                ExpectedColumnItem(
                    name="library_input",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=1000,
                    procedure="Library QC",
                    description="Library input (ng)",
                    example=10,
                ),
                ExpectedColumnItem(
                    name="cluster_density",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=10000,
                    procedure="Sequencing QC",
                    description="Cluster density",
                    example=1000,
                ),
                ExpectedColumnItem(
                    name="q30",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=100,
                    procedure="Sequencing QC",
                    description="Q30",
                    example=95,
                ),
                ExpectedColumnItem(
                    name="total_reads",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=1000,
                    procedure="Sequencing QC",
                    description="Total reads (M)",
                    example=36,
                ),
                ExpectedColumnItem(
                    name="reads_length",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=1000,
                    procedure="Sequencing QC",
                    description="Reads length (bp)",
                    example=150,
                ),
                ExpectedColumnItem(
                    name="sequencing_base",
                    required=True,
                    type=Type.NUMBER,
                    min=0,
                    max=1000,
                    procedure="Sequencing QC",
                    description="Sequencing base (G)",
                    example=10,
                ),
                ExpectedColumnItem(
                    name="other",
                    required=False,
                    type=Type.TEXT,
                    procedure="Sequencing QC",
                    description="Other",
                    example="",
                ),
            ],
        }
